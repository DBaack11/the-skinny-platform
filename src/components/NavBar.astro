---
import { Image } from "astro:assets";
import TSPLogo from "../assets/TSPLogo.png";

const currentPath = Astro.url.pathname;
const links = [
  { label: "Home", path: "/" },
  { label: "About", path: "/about" },
  { label: "Skinny Books", path: "/skinny-books" },
  { label: "Collaborators", path: "/collaborators" },
];
---

<nav class={currentPath.startsWith("/about") ? "bg-skinny-tan" : ""}>
  <div class="flex flex-row justify-between items-center px-4 md:px-12 pt-3 md:pt-6">
    <a href="/"><Image src={TSPLogo} class="w-[75px] sm:w-[100px] md:w-[150px]" alt="The Skinny Platform" /></a>
    <ul class="flex gap-3 md:gap-6">
      {
        links.map(({ label, path }) => {
          const isActive = path === currentPath;
          return (
            <li>
              <a
                href={path}
                data-nav-link
                class={`block text-xs md:text-lg relative 
                  ${isActive ? 'text-skinny-orange after:scale-x-100 after:bg-skinny-orange/50 hover:after:bg-skinny-orange/50' : 'text-black after:scale-x-0 after:bg-gray-400'}
                  hover:text-skinny-orange
                  transform hover:-translate-y-0.5
                  after:absolute after:w-full after:h-[2px] after:bottom-[-4px] after:left-0 
                  hover:after:scale-x-100
                  transition-[transform,color] duration-400
                  after:transition-[transform,background-color] after:duration-400`}
              >
                {label}
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
</nav>

<script>
  function updateNavLinks() {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('[data-nav-link]');
    
    navLinks.forEach(link => {
      const href = link.getAttribute('href');
      const isActive = href === currentPath;
      
      // Reset classes
      link.className = `block text-xs md:text-lg relative 
        ${isActive ? 'text-skinny-orange after:scale-x-100 after:bg-skinny-orange/50 hover:after:bg-skinny-orange/50' : 'text-black after:scale-x-0 after:bg-gray-400'}
        hover:text-skinny-orange
        transform hover:-translate-y-0.5
        after:absolute after:w-full after:h-[2px] after:bottom-[-4px] after:left-0 
        hover:after:scale-x-100
        transition-[transform,color] duration-400
        after:transition-[transform,background-color] after:duration-400`;
    });
  }

  // Update on page load
  updateNavLinks();

  // Update on navigation (for client-side navigation)
  // document.addEventListener('astro:page-load', updateNavLinks);
</script>
