---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { Book } from "../content.config";
import { Image } from "astro:assets";

import NoisyHead from "../assets/noisy-head.png";
import PitchBeforeProduct from "../assets/pitch-before-product.png";
import TestosteroneTheScienceOfMojo from "../assets/testosterone-the-science-of-mojo.png";
import BeyondTheFounderRainmaker from "../assets/beyond-the-founder-rainmaker.png";
import BookOfNuggets from "../assets/book-of-nuggets.png";
import CTAButton from "../components/CTAButton.astro";
import Footer from "../components/Footer/Footer.astro";
import DownloadButton from "../components/DownloadButton.astro";

type BookId = "noisy-head" | "pitch-before-product" | "book-of-nuggets" | "beyond-the-founder-rainmaker" | "testosterone-the-science-of-mojo";
const bookCovers = {
  "noisy-head": { src: NoisyHead, alt: "Noisy Head Book Cover" },
  "pitch-before-product": {
    src: PitchBeforeProduct,
    alt: "Pitch Before Product Book Cover",
  },
  "book-of-nuggets": { src: BookOfNuggets, alt: "Book of Nuggets Cover" },
  "testosterone-the-science-of-mojo": { src: TestosteroneTheScienceOfMojo, alt: "Testosterone: The Science of Mojo Cover" },
  "beyond-the-founder-rainmaker": { src: BeyondTheFounderRainmaker, alt: "Beyond the Founder Rainmaker Cover" },
} as const;

const fetchBooks = await getCollection("skinnyBooks");
const books: Book[] = fetchBooks.map((entry: { data: Book }) => entry.data);

const colors = ["bg-skinny-cream", "bg-skinny-tan"];
---

<Layout>
  <main>
    {
      books.map(({ id, title, author, description, link }, index) => {
        const { src, alt } = bookCovers[id as BookId];
        const authorId = author.toLowerCase().replace(/\s+/g, "-");
        const bgColor = colors[index % colors.length];
        return (
          <section
            id={id}
            class={`min-h-[90vh] flex flex-col lg:flex-row items-center justify-center lg:justify-evenly px-4 pt-24 xl:pt-48
              ${bgColor} ${index > 0 ? "shadow-[inset_0_4px_12px_rgba(0,0,0,0.2)]" : ""}
              ${index === books.length - 1 ? "pb-72" : "pb-24 xl:pb-48"}`}
          >
            <Image src={src} alt={alt} class="max-w-[40%] lg:max-w-[25%] rounded-lg mb-16 lg:mb-0 shadow-[-7px_7px_20px_0px_rgba(0,_0,_0,_.75)]" />

            <div class="max-w-[90%] lg:max-w-[50%] flex flex-col items-left">
              <h2 class="text-[8vw] sm:text-[6vw] lg:text-[4vw] font-medium -tracking-[0.03em] -mb-3 whitespace-pre-wrap leading-none">{title}</h2>
              <h3 class="text-base font-light -tracking-[0.03em] mt-4">
                by{" "}
                {authorId === "the-skinny-platform" ? (
                  "The Skinny Platform"
                ) : (
                  <a href={`/collaborators#${authorId}`} class="underline hover:text-skinny-orange transition-all duration-300 text-lg">
                    {author}
                  </a>
                )}
              </h3>

              <div class="h-[1.5px] w-full bg-skinny-blue/30 my-8 self-center" />

              <div class="relative flex flex-col items-center">
                <div class="relative description-container">
                  <p class="text-sm lg:text-base font-light -tracking-[0.03em] whitespace-pre-wrap overflow-hidden max-h-[350px] transition-[max-height] duration-500">
                    {description}
                  </p>
                  <div
                    class={`absolute bottom-0 left-0 w-full h-32 pointer-events-none
                    ${bgColor === "bg-skinny-cream" ? "bg-gradient-to-t from-skinny-cream" : "bg-gradient-to-t from-skinny-tan"} 
                    to-transparent opacity-0`}
                  />
                </div>
                <button class="read-more-button text-xs sm:text-base mt-4 text-black hover:text-skinny-orange hover:scale-110 transition-all duration-300 hidden">Show More</button>
              </div>

              <div class="h-[1.5px] w-full bg-skinny-blue/30 my-8 self-center" />

              <CTAButton action="book-link" label="Get this book" class="mt-8" link={link} />
              {id === "noisy-head" && (
                <div class="flex flex-row gap-2 sm:gap-4 w-full mt-8">
                  <DownloadButton label={`"What's In Your Control?" Framework`} pdfUrl="/In-Your-Control.pdf" />
                  <DownloadButton label={`"Noisy Head" Framework`} pdfUrl="/Noisy-Head-Framework.pdf" />
                </div>
              )}
            </div>
          </section>
        );
      })
    }

    <Footer />
  </main>
</Layout>

<script>
  // document.addEventListener("astro:page-load", () => {
  // Check content height and show/hide buttons
  document.querySelectorAll(".description-container").forEach((container) => {
    const content = container.querySelector("p");
    const button = container.parentElement?.querySelector(".read-more-button");
    const fadeOverlay = container.querySelector("div");

    if (content && button && fadeOverlay) {
      // Get the full height of the content
      const contentHeight = content.scrollHeight;

      // Only show button and overlay if content is taller than 400px
      if (contentHeight > 350) {
        button.classList.remove("hidden");
        fadeOverlay.classList.remove("opacity-0");

        // Add click handler
        button.addEventListener("click", () => {
          const isExpanded = content.style.maxHeight === "4000px";
          content.style.maxHeight = isExpanded ? "400px" : "4000px";
          fadeOverlay.style.opacity = isExpanded ? "1" : "0";
          button.textContent = isExpanded ? "Show More" : "Show Less";
        });
      }
    }
  });
  // });
</script>
